//
//  EvaluateViewController.m
//  JMBaseProject
//
//  Created by Liuny on 2019/6/27.
//  Copyright © 2019 liuny. All rights reserved.
//

#import "EvaluateViewController.h"
#import "EditGoodCell.h"
#import "EidtGoodAddCell.h"
#import "PickImageTipView.h"
#import "LEEStarRating.h"
#import "EvaluateSuccessViewController.h"
#import "JMSystemPickImageTool.h"

@interface EvaluateViewController ()<UICollectionViewDelegate,UICollectionViewDataSource,UICollectionViewDelegateFlowLayout>
@property (weak, nonatomic) IBOutlet UIImageView *goodCoverImageView;
@property (weak, nonatomic) IBOutlet UILabel *goodTitleLabel;
@property (weak, nonatomic) IBOutlet UILabel *goodPriceLabel;
@property (weak, nonatomic) IBOutlet UIView *starView;

@property (weak, nonatomic) IBOutlet UITextView *contentTextView;
@property (weak, nonatomic) IBOutlet UICollectionView *collectionView;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *collectionHeightConstraint;
@property (weak, nonatomic) IBOutlet UILabel *pictureNumTipLabel;

@property (strong, nonatomic) NSMutableArray *collectionData;
@property (nonatomic, strong) LEEStarRating *starDetailView;
@end

#define AddItem @"Add"

@implementation EvaluateViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}

-(void)initControl{
    self.collectionView.dataSource = self;
    self.collectionView.delegate = self;
    self.collectionView.scrollEnabled = NO;
    
    [self initStarDetailView];
}

-(void)initData{
    self.title = @"发表评价";
    //初始化
    self.collectionData = [[NSMutableArray alloc] init];
    [self.collectionData addObject:AddItem];
    [self updateCollectionView];
    
    [self.goodCoverImageView sd_setImageWithURL:[JMCommonMethod imageUrlWithPath:self.good.coverImage]];
    self.goodTitleLabel.text = self.good.title;
    self.goodPriceLabel.text = [NSString stringWithFormat:@"￥%@",self.good.price];
}

- (void)initStarDetailView{
    self.starDetailView = [[LEEStarRating alloc] initWithFrame:CGRectMake(0, 0, self.starView.mj_w, self.starView.mj_h) Count:5];
    self.starDetailView.spacing = 7.0f; //间距
    self.starDetailView.checkedImage = [UIImage imageNamed:@"home_b20"]; //选中图片
    self.starDetailView.uncheckedImage = [UIImage imageNamed:@"home_b21"]; //未选中图片
    self.starDetailView.type = RatingTypeWhole; //评分类型
    self.starDetailView.touchEnabled = YES; //是否启用点击评分 如果纯为展示则不需要设置
    self.starDetailView.slideEnabled = YES;
    self.starDetailView.maximumScore = 5.0f; //最大分数
    self.starDetailView.minimumScore = 1.0f; //最小分数
    self.starDetailView.currentScore = 5;
    
    [self.starView addSubview:self.starDetailView];
}

-(void)updateCollectionView{
    //更新数据源
    id lastObject = self.collectionData.lastObject;
    if(self.collectionData.count > 6){
        if([lastObject isEqual:AddItem]){
            [self.collectionData removeObject:AddItem];
        }
    }else if(self.collectionData.count < 6){
        if([lastObject isEqual:AddItem] == NO){
            [self.collectionData addObject:AddItem];
        }
    }
    [self.collectionView reloadData];
    //更新高度
    CGFloat width = (kScreenWidth - 15.0*2 - 12.0*2)/3.0;
    NSInteger row = ceil(self.collectionData.count/3.0);
    CGFloat needHeight = width*row + 12*(row-1);
    self.collectionHeightConstraint.constant = needHeight;
    //更新图片数量提示
    lastObject = self.collectionData.lastObject;
    if([lastObject isEqual:AddItem]){
        self.pictureNumTipLabel.text = [NSString stringWithFormat:@"最多上传6张照片 (%d/6)",(int)self.collectionData.count-1];
    }else{
        self.pictureNumTipLabel.text = [NSString stringWithFormat:@"最多上传6张照片 (%d/6)",(int)self.collectionData.count];
    }
}

#pragma mark - UICollection

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.collectionData.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    id model = self.collectionData[indexPath.row];
    if([model isEqual:AddItem]){
        //添加
        EidtGoodAddCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"EidtGoodAddCell" forIndexPath:indexPath];
        return cell;
    }else{
        EditGoodCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"EditGoodCell" forIndexPath:indexPath];
        cell.imageView.image = self.collectionData[indexPath.row];
        JMWeak(self);
        cell.deleteBlock = ^{
            [weakself.collectionData removeObjectAtIndex:indexPath.row];
            [weakself updateCollectionView];
        };
        return cell;
    }
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath{
    CGFloat width = (kScreenWidth - 15.0*2 - 12.0*2)/3.0;
    return CGSizeMake(width, width);
}

-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section{
    return UIEdgeInsetsZero;
}

-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section{
    return 10.0;
}

-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section{
    return 12.0;
}

-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    id model = self.collectionData[indexPath.row];
    if([model isEqual:AddItem]){
        //添加
        [self addImage];
    }else{
        
    }
}

-(void)addImage{
    PickImageTipView *pickImageTip = [[PickImageTipView alloc] initWithXib];
    [pickImageTip showViewWithDoneBlock:^(NSDictionary *params) {
        NSString *buttonIndex = [params getJsonValue:@"ButtonIndex"];
        switch (buttonIndex.integerValue) {
            case 0:
            {
                //拍照
                [[JMSystemPickImageTool sharedJMSystemPickImageTool] pickOneImageWithCamera:^(NSURL * _Nonnull videoUrl, UIImage * _Nonnull image) {
                    [self.collectionData insertObject:image atIndex:self.collectionData.count-1];
                    [self updateCollectionView];
                }];
                break;
            }
            case 1:
                //从相册中选择
                [self.collectionData insertObject:@"1" atIndex:self.collectionData.count-1];
                [self updateCollectionView];
                break;
            default:
                break;
        }
    }];
}

#pragma mark - Actions
- (IBAction)commitAction:(id)sender {
    [self requestCommitEvaluate];
}


#pragma mark - 跳转
-(void)goSuccessVC{
    EvaluateSuccessViewController *successVC = [[EvaluateSuccessViewController alloc] initWithStoryboardName:@"Order"];
    [self.navigationController pushViewController:successVC animated:YES];
}

#pragma mark - 网络
-(void)requestCommitEvaluate{
    NSMutableDictionary *params = [JMCommonMethod baseRequestParams];
    [params setJsonValue:@"1" key:@"num"];
    [params setJsonValue:self.contentTextView.text key:@"content1"];
    NSString *star = [NSString stringWithFormat:@"%d",(int)self.starDetailView.currentScore];
    [params setJsonValue:star key:@"starNum1"];
    [params setJsonValue:self.good.afterSaleId key:@"orderGoodsId1"];
    
    NSMutableArray *array = [[NSMutableArray alloc] init];
    for(id object in self.collectionData){
        if([object isKindOfClass:[UIImage class]]){
            [array addObject:object];
        }
    }
    [self showLoading];
    [[JMRequestManager sharedManager] upload:kUrlEvaluateGood parameters:params formDataBlock:^NSDictionary<NSData *,JMDataName *> *(id<AFMultipartFormData> formData, NSMutableDictionary<NSData *,JMDataName *> *needFillDataDict) {
        for(int i=0;i<array.count;i++){
            UIImage *image = array[i];
            needFillDataDict[UIImageJPEGRepresentation(image, 0.3)] = [NSString stringWithFormat:@"img1_%d-image.jpg",(i+1)];
        }
        return needFillDataDict;
    } progress:nil completion:^(JMBaseResponse *response) {
        [self dismissLoading];
        if(response.error){
            [JMProgressHelper toastInWindowWithMessage:response.errorMsg];
        }else{
            [self goSuccessVC];
        }
    }];
}
@end
